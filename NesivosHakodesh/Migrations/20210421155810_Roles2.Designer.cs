// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NesivosHakodesh.Core.DB;

namespace NesivosHakodesh.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210421155810_Roles2")]
    partial class Roles2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NesivosHakodesh.Models.AssignmentResult", b =>
                {
                    b.Property<int>("AssignmentResultID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MaamarID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProjectAssignmentID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentResultID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("MaamarID");

                    b.HasIndex("ProjectAssignmentID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("AssignmentResults");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Maamar", b =>
                {
                    b.Property<int>("MaamarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccuracyDescriptin")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("AccuracyRate")
                        .HasColumnType("int");

                    b.Property<string>("AudioFileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("BechatzrPrinted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("BechatzrPrintedWeek")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LocationDetails")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Parsha")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("PdfFileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("SourceID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("TopicID")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("WeeklyIndex")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Year")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("MaamarID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("Date");

                    b.HasIndex("Parsha");

                    b.HasIndex("SourceID");

                    b.HasIndex("Status");

                    b.HasIndex("Title");

                    b.HasIndex("TopicID");

                    b.HasIndex("Type");

                    b.HasIndex("UpdatedUserId");

                    b.HasIndex("Year");

                    b.ToTable("Maamarim");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarParagraph", b =>
                {
                    b.Property<int>("MaamarParagraphID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MaamarID")
                        .HasColumnType("int");

                    b.Property<int>("ParagraphType")
                        .HasColumnType("int");

                    b.Property<string>("Sort")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("MaamarParagraphID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("MaamarID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("MaamarimParagraphs");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarTopic", b =>
                {
                    b.Property<int>("MaamarTopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MaamarID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TopicID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("MaamarTopicID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("MaamarID");

                    b.HasIndex("TopicID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("MaamarTopic");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarTorahLink", b =>
                {
                    b.Property<int>("MaamarTorahLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MaamarID")
                        .HasColumnType("int");

                    b.Property<int?>("TorahID")
                        .HasColumnType("int");

                    b.Property<int?>("TorahParagraphID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("MaamarTorahLinkID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("MaamarID");

                    b.HasIndex("TorahID");

                    b.HasIndex("TorahParagraphID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("MaamarTorahLinks");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectAssignment", b =>
                {
                    b.Property<int>("ProjectAssignmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ProjectUserID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectAssignmentID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProjectUserID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProjectAssignments");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectChapter", b =>
                {
                    b.Property<int>("ProjectChapterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ParentChapterProjectChapterID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectChapterID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ParentChapterProjectChapterID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("ProjectChapters");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectUser", b =>
                {
                    b.Property<int>("ProjectUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectUserID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UpdatedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "3e7e88d9-abf4-4236-bbd0-ae6bfa05aaab",
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "c7018743-eb7b-4f4d-ab75-f90bf37b7581",
                            Name = "TOPICS_VIEW"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "9952009b-7d0d-44c0-b5e6-661cb296a397",
                            Name = "TOPICS_EDIT"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = "44cd0567-17cf-4b0a-a5de-d51c8b755123",
                            Name = "SOURCES_REG_VIEW"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = "ab7f340b-cc46-4215-b548-cfe98009a6ff",
                            Name = "SOURCES_REG_EDIT"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = "beb6ca75-2b0d-4d9a-bddc-50dd0be234ce",
                            Name = "SOURCES_PRS_VIEW"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = "f1601e83-c680-4df4-b7b4-0f1bb7cea4c4",
                            Name = "SOURCES_PRS_EDIT"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = "3b67a310-e30c-46fb-b072-754a9b8983f8",
                            Name = "TORHAS_VIEW"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = "30d3c3a0-de09-4007-b64b-c495de336935",
                            Name = "TORHAS_EDIT"
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = "8f04e8e3-605d-447e-9b66-026648c3e0cb",
                            Name = "MAAMARIM_0_VIEW"
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = "ea12a774-6f5c-44e4-b3f6-9c44e7e0df69",
                            Name = "MAAMARIM_0_EDIT"
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = "2953f598-d65f-412b-85f0-7820019e67b1",
                            Name = "MAAMARIM_0_PRINT"
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = "51d9b95a-fcb9-4a3b-8cfd-d69498f8a276",
                            Name = "MAAMARIM_0_DOWNLOAD"
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = "5c7b9e7a-168b-448b-9629-57d40b2b5adb",
                            Name = "MAAMARIM_1_VIEW"
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = "7bad6c9b-d477-48b4-a565-c3cb63a1df92",
                            Name = "MAAMARIM_1_EDIT"
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = "bd39ace9-9f23-427f-9fd5-3542ec6de990",
                            Name = "MAAMARIM_1_PRINT"
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = "bf287d99-15b3-412f-9e41-68147189f99f",
                            Name = "MAAMARIM_1_DOWNLOAD"
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = "b92fa664-f248-42ee-b22e-10e2b19c08b9",
                            Name = "MAAMARIM_2_VIEW"
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = "386673be-a49e-4a1a-9d9e-ecaf38178ed6",
                            Name = "MAAMARIM_2_EDIT"
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = "aa3d88e5-4651-4d60-b409-50e02613fd6f",
                            Name = "MAAMARIM_2_PRINT"
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = "d24f45a7-cc39-4731-bfde-debed9755ed5",
                            Name = "MAAMARIM_2_DOWNLOAD"
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = "bc6dbd30-d36a-4a37-9aa7-31d8168ea22d",
                            Name = "MAAMARIM_3_VIEW"
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = "5af9f946-0e35-4911-9cbd-66779d101a06",
                            Name = "MAAMARIM_3_EDIT"
                        },
                        new
                        {
                            Id = 24,
                            ConcurrencyStamp = "4513f9c5-76c9-4187-91d9-37e9784605a7",
                            Name = "MAAMARIM_3_PRINT"
                        },
                        new
                        {
                            Id = 25,
                            ConcurrencyStamp = "894306ad-380c-4db2-bb1f-212d30435f27",
                            Name = "MAAMARIM_3_DOWNLOAD"
                        });
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Sefer", b =>
                {
                    b.Property<int>("SeferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("OutlineJson")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("SeferID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("Name");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Sefurim");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Source", b =>
                {
                    b.Property<int>("SourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssingedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SourceDetails")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("SourceID");

                    b.HasIndex("AssingedUserId");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ParentTopicTopicID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("TopicID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("ParentTopicTopicID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Torah", b =>
                {
                    b.Property<int>("TorahID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("AnnHeight")
                        .HasColumnType("double");

                    b.Property<int?>("AnnPageNumber")
                        .HasColumnType("int");

                    b.Property<double?>("AnnWidth")
                        .HasColumnType("double");

                    b.Property<double?>("AnnX")
                        .HasColumnType("double");

                    b.Property<double?>("AnnY")
                        .HasColumnType("double");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Index")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MaarahMakoim")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Parsha")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("SeferID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("TorahID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("Parsha");

                    b.HasIndex("SeferID");

                    b.HasIndex("Status");

                    b.HasIndex("Title");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("Torahs");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.TorahParagraph", b =>
                {
                    b.Property<int>("TorahParagraphID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SortIndex")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("TorahID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("TorahParagraphID");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("TorahID");

                    b.HasIndex("UpdatedUserId");

                    b.ToTable("TorahParagraphs");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Cell")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.AssignmentResult", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Maamar", "Maamar")
                        .WithMany()
                        .HasForeignKey("MaamarID");

                    b.HasOne("NesivosHakodesh.Models.ProjectAssignment", "ProjectAssignment")
                        .WithMany("AssignmentResults")
                        .HasForeignKey("ProjectAssignmentID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Maamar", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceID");

                    b.HasOne("NesivosHakodesh.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarParagraph", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Maamar", null)
                        .WithMany("MaamarParagraphs")
                        .HasForeignKey("MaamarID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarTopic", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Maamar", "Maamar")
                        .WithMany("SubTopics")
                        .HasForeignKey("MaamarID");

                    b.HasOne("NesivosHakodesh.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.MaamarTorahLink", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Maamar", "Maamar")
                        .WithMany("TorahLinks")
                        .HasForeignKey("MaamarID");

                    b.HasOne("NesivosHakodesh.Models.Torah", "Torah")
                        .WithMany("MaamarLinks")
                        .HasForeignKey("TorahID");

                    b.HasOne("NesivosHakodesh.Models.TorahParagraph", "TorahParagraph")
                        .WithMany()
                        .HasForeignKey("TorahParagraphID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Project", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.User", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectAssignment", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.ProjectUser", "ProjectUser")
                        .WithMany("ProjectAssignments")
                        .HasForeignKey("ProjectUserID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectChapter", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.ProjectChapter", "ParentChapter")
                        .WithMany()
                        .HasForeignKey("ParentChapterProjectChapterID");

                    b.HasOne("NesivosHakodesh.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.ProjectUser", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");

                    b.HasOne("NesivosHakodesh.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Sefer", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Source", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "AssingedUser")
                        .WithMany()
                        .HasForeignKey("AssingedUserId");

                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Topic", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Topic", "ParentTopic")
                        .WithMany()
                        .HasForeignKey("ParentTopicTopicID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.Torah", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Sefer", "Sefer")
                        .WithMany("Torahs")
                        .HasForeignKey("SeferID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.TorahParagraph", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId");

                    b.HasOne("NesivosHakodesh.Models.Torah", null)
                        .WithMany("TorahParagraphs")
                        .HasForeignKey("TorahID");

                    b.HasOne("NesivosHakodesh.Models.User", "UpdatedUser")
                        .WithMany()
                        .HasForeignKey("UpdatedUserId");
                });

            modelBuilder.Entity("NesivosHakodesh.Models.UserRole", b =>
                {
                    b.HasOne("NesivosHakodesh.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NesivosHakodesh.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
